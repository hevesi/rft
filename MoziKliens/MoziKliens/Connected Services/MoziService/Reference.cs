//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoziKliens.MoziService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/MoziService")]
    [System.SerializableAttribute()]
    public partial class ServiceData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Film", Namespace="http://schemas.datacontract.org/2004/07/MoziService")]
    [System.SerializableAttribute()]
    public partial class Film : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int hosszField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mufajField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cim {
            get {
                return this.cimField;
            }
            set {
                if ((object.ReferenceEquals(this.cimField, value) != true)) {
                    this.cimField = value;
                    this.RaisePropertyChanged("cim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hossz {
            get {
                return this.hosszField;
            }
            set {
                if ((this.hosszField.Equals(value) != true)) {
                    this.hosszField = value;
                    this.RaisePropertyChanged("hossz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mufaj {
            get {
                return this.mufajField;
            }
            set {
                if ((object.ReferenceEquals(this.mufajField, value) != true)) {
                    this.mufajField = value;
                    this.RaisePropertyChanged("mufaj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Foglalas", Namespace="http://schemas.datacontract.org/2004/07/MoziService")]
    [System.SerializableAttribute()]
    public partial class Foglalas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int filmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime foglalasIdopontjaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int filmId {
            get {
                return this.filmIdField;
            }
            set {
                if ((this.filmIdField.Equals(value) != true)) {
                    this.filmIdField = value;
                    this.RaisePropertyChanged("filmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime foglalasIdopontja {
            get {
                return this.foglalasIdopontjaField;
            }
            set {
                if ((this.foglalasIdopontjaField.Equals(value) != true)) {
                    this.foglalasIdopontjaField = value;
                    this.RaisePropertyChanged("foglalasIdopontja");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MoziService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MoziKliens.MoziService.ServiceData), Action="http://tempuri.org/IService1/LoginServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/MoziService")]
        string Login(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Logout", ReplyAction="http://tempuri.org/IService1/LogoutResponse")]
        string Logout(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Logout", ReplyAction="http://tempuri.org/IService1/LogoutResponse")]
        System.Threading.Tasks.Task<string> LogoutAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMovies", ReplyAction="http://tempuri.org/IService1/GetAllMoviesResponse")]
        MoziKliens.MoziService.Film[] GetAllMovies(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMovies", ReplyAction="http://tempuri.org/IService1/GetAllMoviesResponse")]
        System.Threading.Tasks.Task<MoziKliens.MoziService.Film[]> GetAllMoviesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMoviesByTitle", ReplyAction="http://tempuri.org/IService1/GetMoviesByTitleResponse")]
        MoziKliens.MoziService.Film[] GetMoviesByTitle(string title, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMoviesByTitle", ReplyAction="http://tempuri.org/IService1/GetMoviesByTitleResponse")]
        System.Threading.Tasks.Task<MoziKliens.MoziService.Film[]> GetMoviesByTitleAsync(string title, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMoviesByGenre", ReplyAction="http://tempuri.org/IService1/GetMoviesByGenreResponse")]
        MoziKliens.MoziService.Film[] GetMoviesByGenre(string genre, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMoviesByGenre", ReplyAction="http://tempuri.org/IService1/GetMoviesByGenreResponse")]
        System.Threading.Tasks.Task<MoziKliens.MoziService.Film[]> GetMoviesByGenreAsync(string genre, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReservations", ReplyAction="http://tempuri.org/IService1/GetReservationsResponse")]
        MoziKliens.MoziService.Foglalas[] GetReservations(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReservations", ReplyAction="http://tempuri.org/IService1/GetReservationsResponse")]
        System.Threading.Tasks.Task<MoziKliens.MoziService.Foglalas[]> GetReservationsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReservationsByDate", ReplyAction="http://tempuri.org/IService1/GetReservationsByDateResponse")]
        MoziKliens.MoziService.Foglalas[] GetReservationsByDate(System.DateTime date, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReservationsByDate", ReplyAction="http://tempuri.org/IService1/GetReservationsByDateResponse")]
        System.Threading.Tasks.Task<MoziKliens.MoziService.Foglalas[]> GetReservationsByDateAsync(System.DateTime date, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReservationsByMovie", ReplyAction="http://tempuri.org/IService1/GetReservationsByMovieResponse")]
        MoziKliens.MoziService.Foglalas[] GetReservationsByMovie(int movieId, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReservationsByMovie", ReplyAction="http://tempuri.org/IService1/GetReservationsByMovieResponse")]
        System.Threading.Tasks.Task<MoziKliens.MoziService.Foglalas[]> GetReservationsByMovieAsync(int movieId, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMovie", ReplyAction="http://tempuri.org/IService1/AddMovieResponse")]
        string AddMovie(string title, int length, string genre, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMovie", ReplyAction="http://tempuri.org/IService1/AddMovieResponse")]
        System.Threading.Tasks.Task<string> AddMovieAsync(string title, int length, string genre, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddReservation", ReplyAction="http://tempuri.org/IService1/AddReservationResponse")]
        string AddReservation(System.DateTime dateTime, int movieId, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddReservation", ReplyAction="http://tempuri.org/IService1/AddReservationResponse")]
        System.Threading.Tasks.Task<string> AddReservationAsync(System.DateTime dateTime, int movieId, string uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MoziKliens.MoziService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MoziKliens.MoziService.IService1>, MoziKliens.MoziService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string name, string password) {
            return base.Channel.Login(name, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string name, string password) {
            return base.Channel.LoginAsync(name, password);
        }
        
        public string Logout(string uid) {
            return base.Channel.Logout(uid);
        }
        
        public System.Threading.Tasks.Task<string> LogoutAsync(string uid) {
            return base.Channel.LogoutAsync(uid);
        }
        
        public MoziKliens.MoziService.Film[] GetAllMovies(string uid) {
            return base.Channel.GetAllMovies(uid);
        }
        
        public System.Threading.Tasks.Task<MoziKliens.MoziService.Film[]> GetAllMoviesAsync(string uid) {
            return base.Channel.GetAllMoviesAsync(uid);
        }
        
        public MoziKliens.MoziService.Film[] GetMoviesByTitle(string title, string uid) {
            return base.Channel.GetMoviesByTitle(title, uid);
        }
        
        public System.Threading.Tasks.Task<MoziKliens.MoziService.Film[]> GetMoviesByTitleAsync(string title, string uid) {
            return base.Channel.GetMoviesByTitleAsync(title, uid);
        }
        
        public MoziKliens.MoziService.Film[] GetMoviesByGenre(string genre, string uid) {
            return base.Channel.GetMoviesByGenre(genre, uid);
        }
        
        public System.Threading.Tasks.Task<MoziKliens.MoziService.Film[]> GetMoviesByGenreAsync(string genre, string uid) {
            return base.Channel.GetMoviesByGenreAsync(genre, uid);
        }
        
        public MoziKliens.MoziService.Foglalas[] GetReservations(string uid) {
            return base.Channel.GetReservations(uid);
        }
        
        public System.Threading.Tasks.Task<MoziKliens.MoziService.Foglalas[]> GetReservationsAsync(string uid) {
            return base.Channel.GetReservationsAsync(uid);
        }
        
        public MoziKliens.MoziService.Foglalas[] GetReservationsByDate(System.DateTime date, string uid) {
            return base.Channel.GetReservationsByDate(date, uid);
        }
        
        public System.Threading.Tasks.Task<MoziKliens.MoziService.Foglalas[]> GetReservationsByDateAsync(System.DateTime date, string uid) {
            return base.Channel.GetReservationsByDateAsync(date, uid);
        }
        
        public MoziKliens.MoziService.Foglalas[] GetReservationsByMovie(int movieId, string uid) {
            return base.Channel.GetReservationsByMovie(movieId, uid);
        }
        
        public System.Threading.Tasks.Task<MoziKliens.MoziService.Foglalas[]> GetReservationsByMovieAsync(int movieId, string uid) {
            return base.Channel.GetReservationsByMovieAsync(movieId, uid);
        }
        
        public string AddMovie(string title, int length, string genre, string uid) {
            return base.Channel.AddMovie(title, length, genre, uid);
        }
        
        public System.Threading.Tasks.Task<string> AddMovieAsync(string title, int length, string genre, string uid) {
            return base.Channel.AddMovieAsync(title, length, genre, uid);
        }
        
        public string AddReservation(System.DateTime dateTime, int movieId, string uid) {
            return base.Channel.AddReservation(dateTime, movieId, uid);
        }
        
        public System.Threading.Tasks.Task<string> AddReservationAsync(System.DateTime dateTime, int movieId, string uid) {
            return base.Channel.AddReservationAsync(dateTime, movieId, uid);
        }
    }
}
